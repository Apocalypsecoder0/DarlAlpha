./src/main/java/Main.java:55: error: duplicate class: Fleet
class Fleet {
^
./src/main/java/Main.java:71: error: duplicate class: Ship
class Ship {
^
./src/main/java/Main.java:320: error: duplicate class: Resources
class Resources {
^
./src/main/java/Main.java:564: error: duplicate class: Rewards
class Rewards {
^
./src/main/java/Player.java:4: error: duplicate class: Account
class Account {
^
./src/main/java/Player.java:8: error: duplicate class: StarTrekRace
enum StarTrekRace {
^
./src/main/java/Player.java:15: error: duplicate class: StarTrekTechnology
class StarTrekTechnology {
^
./src/main/java/Player.java:31: error: duplicate class: Fleet
class Fleet {
^
./src/main/java/Player.java:35: error: duplicate class: Stats
class Stats {
^
./src/main/java/Player.java:39: error: duplicate class: Resources
class Resources {
^
./src/main/java/Player.java:67: error: class Main is public, should be declared in a file named Main.java
public class Main {
       ^
./src/main/java/CombatSystem.java:3: error: duplicate class: CombatSystem
public class CombatSystem {
       ^
./src/main/java/CombatSystem.java:25: error: duplicate class: Coordinates3D
class Coordinates3D {
^
./src/main/java/CombatSystem.java:52: error: duplicate class: Ship
class Ship {
^
./src/main/java/CombatSystem.java:78: error: duplicate class: EnemyShip
class EnemyShip extends Ship {
^
./src/main/java/CombatSystem.java:87: error: duplicate class: Fleet
class Fleet {
^
./src/main/java/CombatSystem.java:99: error: duplicate class: CombatLog
class CombatLog {
^
./src/main/java/CombatSystem.java:103: error: duplicate class: Rewards
class Rewards {
^
./src/main/java/CombatSystem.java:120: error: duplicate class: CombatResult
class CombatResult {
^
./src/main/java/Position.java:1: error: duplicate class: Position
public class Position {
       ^
./src/main/java/Game.java:4: error: duplicate class: MessageSystem
class MessageSystem {
^
./src/main/java/Game.java:11: error: duplicate class: SaveSystem
class SaveSystem {
^
./src/main/java/Game.java:70: error: duplicate class: AudioSystem
class AudioSystem {
^
./src/main/java/Game.java:79: error: duplicate class: Player
class Player {
^
./src/main/java/Game.java:92: error: duplicate class: Universe
class Universe {
^
./src/main/java/Game.java:96: error: duplicate class: Resources
class Resources {
^
./src/main/java/Game.java:100: error: duplicate class: Coordinates3D
class Coordinates3D {
^
./src/main/java/Game.java:116: error: duplicate class: Position
class Position {
^
./src/main/java/Game.java:127: error: duplicate class: ImpulseDrive
class ImpulseDrive {
^
./src/main/java/Game.java:133: error: duplicate class: Ship
class Ship {
^
./src/main/java/Game.java:155: error: duplicate class: SpaceTransport
class SpaceTransport {
^
./src/main/java/Game.java:169: error: duplicate class: Economy
class Economy {
^
./src/main/java/Game.java:173: error: duplicate class: ResearchSystem
class ResearchSystem {
^
./src/main/java/Game.java:177: error: duplicate class: CombatSystem
class CombatSystem {
^
./src/main/java/Game.java:181: error: duplicate class: MissionSystem
class MissionSystem {
^
./src/main/java/Game.java:185: error: duplicate class: AllianceSystem
class AllianceSystem {
^
./src/main/java/Game.java:189: error: duplicate class: DungeonSystem
class DungeonSystem {
^
./src/main/java/Game.java:193: error: duplicate class: GoddessSystem
class GoddessSystem {
^
./src/main/java/Game.java:198: error: duplicate class: Game
public class Game {
       ^
./src/main/java/Game.java:242: error: duplicate class: GameTest
class GameTest{
^
./src/main/java/GameTest.java:2: error: package org.junit does not exist
import org.junit.Test;
                ^
./src/main/java/GameTest.java:3: error: package org.junit does not exist
import static org.junit.Assert.*;
                       ^
./src/main/java/CombatInstance.java:8: error: cannot find symbol
    private List<Ship> attackerShips;
            ^
  symbol:   class List
  location: class CombatInstance
./src/main/java/CombatInstance.java:9: error: cannot find symbol
    private List<Ship> defenderShips;
            ^
  symbol:   class List
  location: class CombatInstance
./src/main/java/Main.java:815: error: cannot find symbol
    private Map<String, CelestialBody> celestialBodies;
                        ^
  symbol:   class CelestialBody
  location: class Game
./src/main/java/BattlePass.java:7: error: cannot find symbol
    private Map<Integer, Reward> rewards;
                         ^
  symbol:   class Reward
  location: class BattlePass
./src/main/java/BattlePass.java:57: error: cannot find symbol
    public Reward getReward(int level) {
           ^
  symbol:   class Reward
  location: class BattlePass
./src/main/java/GameTest.java:6: error: cannot find symbol
    @Test
     ^
  symbol:   class Test
  location: class GameTest
./src/main/java/GameTest.java:13: error: cannot find symbol
    @Test
     ^
  symbol:   class Test
  location: class GameTest
./src/main/java/GameTest.java:35: error: cannot find symbol
    @Test
     ^
  symbol:   class Test
  location: class GameTest
./src/main/java/GameTest.java:50: error: cannot find symbol
    @Test
     ^
  symbol:   class Test
  location: class GameTest
./src/main/java/GameTest.java:9: error: cannot find symbol
        assertEquals(1, player.getLevel());
        ^
  symbol:   method assertEquals(int,int)
  location: class GameTest
./src/main/java/GameTest.java:10: error: cannot find symbol
        assertNotNull(player.getFleet());
        ^
  symbol:   method assertNotNull(Fleet)
  location: class GameTest
./src/main/java/GameTest.java:20: error: incompatible types: String cannot be converted to Position
        attacker.getFleet().addShip(new Ship("Battleship"));
                                             ^
./src/main/java/GameTest.java:21: error: incompatible types: String cannot be converted to Position
        attacker.getFleet().addShip(new Ship("Destroyer"));
                                             ^
./src/main/java/GameTest.java:22: error: incompatible types: String cannot be converted to Position
        defender.getFleet().addShip(new Ship("Cruiser"));
                                             ^
./src/main/java/GameTest.java:23: error: incompatible types: String cannot be converted to Position
        defender.getFleet().addShip(new Ship("Carrier"));
                                             ^
./src/main/java/GameTest.java:26: error: cannot find symbol
        assertNotNull(result);
        ^
  symbol:   method assertNotNull(CombatResult)
  location: class GameTest
./src/main/java/GameTest.java:27: error: cannot find symbol
        assertNotNull(result.rewards);
        ^
  symbol:   method assertNotNull(Rewards)
  location: class GameTest
./src/main/java/GameTest.java:28: error: cannot find symbol
        assertTrue(result.rewards.getClass() == Rewards.class);
        ^
  symbol:   method assertTrue(boolean)
  location: class GameTest
./src/main/java/GameTest.java:31: error: cannot find symbol
        assertEquals(Ship.Position.FRONT, 
                                  ^
  symbol:   variable FRONT
  location: class Position
./src/main/java/GameTest.java:37: error: incompatible types: String cannot be converted to Position
        Ship testShip = new Ship("Battleship");
                                 ^
./src/main/java/GameTest.java:41: error: cannot find symbol
        Set<Integer> damages = new HashSet<>();
        ^
  symbol:   class Set
  location: class GameTest
./src/main/java/GameTest.java:41: error: cannot find symbol
        Set<Integer> damages = new HashSet<>();
                                   ^
  symbol:   class HashSet
  location: class GameTest
./src/main/java/GameTest.java:43: error: calculateDamage(Ship) has private access in CombatSystem
            damages.add(combat.calculateDamage(testShip));
                              ^
./src/main/java/GameTest.java:53: error: cannot find symbol
        assertNotNull(universe);
        ^
  symbol:   method assertNotNull(Universe)
  location: class GameTest
./src/main/java/GameTest.java:57: error: cannot find symbol
        assertNotNull(nearestGalaxy);
        ^
  symbol:   method assertNotNull(Galaxy)
  location: class GameTest
./src/main/java/CombatInstance.java:20: error: cannot find symbol
        this.attackerShips = new ArrayList<>(attacker.getFleet().getShips());
                                 ^
  symbol:   class ArrayList
  location: class CombatInstance
./src/main/java/CombatInstance.java:21: error: cannot find symbol
        this.defenderShips = isPvP ? new ArrayList<>(defender.getFleet().getShips()) 
                                         ^
  symbol:   class ArrayList
  location: class CombatInstance
./src/main/java/CombatInstance.java:22: error: cannot find symbol
                                  : new ArrayList<>(enemyFleet.getShips());
                                        ^
  symbol:   class ArrayList
  location: class CombatInstance
./src/main/java/CombatInstance.java:34: error: cannot find symbol
        Ship actor = findShipById(playerId, action.getShipId());
                     ^
  symbol:   method findShipById(String,String)
  location: class CombatInstance
./src/main/java/CombatInstance.java:35: error: cannot find symbol
        Ship target = findTargetShip(action.getTargetId());
                      ^
  symbol:   method findTargetShip(String)
  location: class CombatInstance
./src/main/java/CombatInstance.java:43: error: cannot find symbol
                    updatePosition(actor, action.getNewPosition());
                    ^
  symbol:   method updatePosition(Ship,Position)
  location: class CombatInstance
./src/main/java/CombatInstance.java:46: error: cannot find symbol
                    executeSpecialAbility(actor, target);
                    ^
  symbol:   method executeSpecialAbility(Ship,Ship)
  location: class CombatInstance
./src/main/java/Main.java:30: error: cannot find symbol
        this.experience += amount;
            ^
  symbol: variable experience
./src/main/java/Main.java:31: error: cannot find symbol
        while (experience >= experienceToNextLevel) {
               ^
  symbol:   variable experience
  location: class Resources
./src/main/java/Main.java:31: error: cannot find symbol
        while (experience >= experienceToNextLevel) {
                             ^
  symbol:   variable experienceToNextLevel
  location: class Resources
./src/main/java/Main.java:37: error: cannot find symbol
        level++;
        ^
  symbol:   variable level
  location: class Resources
./src/main/java/Main.java:38: error: cannot find symbol
        experience -= experienceToNextLevel;
        ^
  symbol:   variable experience
  location: class Resources
./src/main/java/Main.java:38: error: cannot find symbol
        experience -= experienceToNextLevel;
                      ^
  symbol:   variable experienceToNextLevel
  location: class Resources
./src/main/java/Main.java:39: error: cannot find symbol
        experienceToNextLevel = (int)(experienceToNextLevel * 1.5);
        ^
  symbol:   variable experienceToNextLevel
  location: class Resources
./src/main/java/Main.java:39: error: cannot find symbol
        experienceToNextLevel = (int)(experienceToNextLevel * 1.5);
                                      ^
  symbol:   variable experienceToNextLevel
  location: class Resources
./src/main/java/Main.java:40: error: cannot find symbol
        stats.increaseOnLevelUp();
        ^
  symbol:   variable stats
  location: class Resources
./src/main/java/Main.java:44: error: cannot find symbol
        return level;
               ^
  symbol:   variable level
  location: class Resources
./src/main/java/Main.java:48: error: cannot find symbol
        return fleet;
               ^
  symbol:   variable fleet
  location: class Resources
./src/main/java/GUI.java:123: error: cannot find symbol
        Account playerAccount = game.getPlayer().getAccount();
                                    ^
  symbol:   method getPlayer()
  location: variable game of type Game
./src/main/java/GUI.java:124: error: cannot find symbol
        BattlePass battlePass = playerAccount.getBattlePass();
                                             ^
  symbol:   method getBattlePass()
  location: variable playerAccount of type Account
./src/main/java/GUI.java:126: error: cannot find symbol
        JLabel usernameLabel = new JLabel("Username: " + playerAccount.getUsername());
                                                                      ^
  symbol:   method getUsername()
  location: variable playerAccount of type Account
./src/main/java/GUI.java:138: error: cannot find symbol
        for (Map.Entry<String, Integer> stat : playerAccount.getStatistics().entrySet()) {
                                                            ^
  symbol:   method getStatistics()
  location: variable playerAccount of type Account
./src/main/java/GUI.java:274: error: cannot find symbol
                    game.getSaveSystem().saveGame(game, slot);
                        ^
  symbol:   method getSaveSystem()
  location: variable game of type Game
./src/main/java/GUI.java:362: error: cannot find symbol
        Fleet playerFleet = game.getPlayer().getFleet();
                                ^
  symbol:   method getPlayer()
  location: variable game of type Game
./src/main/java/GUI.java:382: error: cannot find symbol
                SaveSystem.GameData gameData = game.getSaveSystem().loadGame(slot);
                                                   ^
  symbol:   method getSaveSystem()
  location: variable game of type Game
./src/main/java/Main.java:821: error: cannot find symbol
        this.celestialBodies = initializeCelestialBodies();
                               ^
  symbol:   method initializeCelestialBodies()
  location: class Game
./src/main/java/Main.java:838: error: cannot find symbol
        player.gainExperience(1500);
              ^
  symbol:   method gainExperience(int)
  location: variable player of type Player
./src/main/java/Main.java:842: error: incompatible types: String cannot be converted to Position
        player.getFleet().addShip(new Ship("Battleship"));
                                           ^
./src/main/java/Main.java:847: error: incompatible types: String cannot be converted to Position
        enemyFleet.addShip(new Ship("Enemy Ship"));
                                    ^
./src/main/java/Main.java:430: error: incompatible types: String cannot be converted to Position
        enemyPlayer.getFleet().addShip(new Ship("Enemy Ship"));
                                                ^
./src/main/java/Main.java:444: error: cannot find symbol
        Collections.sort(attackerShips, (a, b) -> a.getPosition().compareTo(b.getPosition()));
                                                                 ^
  symbol:   method compareTo(Position)
  location: class Position
./src/main/java/Main.java:445: error: cannot find symbol
        Collections.sort(defenderShips, (a, b) -> a.getPosition().compareTo(b.getPosition()));
                                                                 ^
  symbol:   method compareTo(Position)
  location: class Position
./src/main/java/SaveSystem.java:61: error: cannot find symbol
        this.player = game.getPlayer();
                          ^
  symbol:   method getPlayer()
  location: variable game of type Game
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
100 errors
only showing the first 100 errors, of 124 total; use -Xmaxerrs if you would like to see more